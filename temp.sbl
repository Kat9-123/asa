W -= W .main 
 #./subleq/Sublib\Sublib.sbl 
 #./subleq/Sublib/Symbols.sbl 
 Z -> 0 
 W -> 0 
 _ASM -> 0 
 _ -> 0 
 
 N_ONE -> -1 
 ONE -> 1 
 ZERO -> 0 
 
 FALSE -> 0 
 TRUE -> 1 
 
 LINEBREAK -> 10 
 
 
 SNEG -> 32768 
 
 \ 
 #./subleq/Sublib/Base.sbl 
 #./subleq/Sublib/Symbols.sbl 
 \ 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 \ 
 #./subleq/Sublib/IO.sbl 
 #./subleq/Sublib/Symbols.sbl 
 \ 
 #./subleq/Sublib/Base.sbl 
 \ 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 \ 
 #./subleq/Sublib/JumpIf.sbl 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 \ 
 #./subleq/Sublib/Arithmetic.sbl 
 #./subleq/Sublib/Base.sbl 
 \ 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 \ 
 #./subleq/Sublib/Logic.sbl 
 #./subleq/Sublib\Sublib.sbl 
 \ 
 
 
 
 
 
 
 
 
 \ 
 
 \ 
 
 
 
 
 
 
 
 .err -> 
 { 
 	W -= W ?IO::PrintLit?. 
 	?IO::PrintLit?string -> &1 70 97 105 108 101 100 0 
 	?IO::PrintLit?. -> 
 	{ 
 		Z -= Z 
 		ptr -= ptr 
 		
 		Z -= ?IO::PrintLit?string 
 		ptr -= Z 
 		W -= W ?IO::Print?.loop 
 		
 		
 		?IO::Print?.loop -> 
 		char -= char &2 
 		char -> 0 
 		n_char -= n_char &2 
 		n_char -> 0 
 		
 		n_char -= (ptr -> ..) 
 		char -= n_char 
 		char -= ZERO ?IO::Print?.fin 
 		
 		-1 -= char 
 		
 		ptr -= N_ONE 
 		
 		
 		Z -= Z ?IO::Print?.loop 
 		
 		
 		?IO::Print?.fin -> 
 		
 	} 
 } 
 
 W -= W -1 
 
 a -> 1234 
 b -> -2119 
 c -> 0 
 d -> 1233 
 
 
 
 
 .main -> 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -15965 
 	?TestJumpIfLe?b -> 16423 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 20112 
 	?TestJumpIfLe?b -> 25597 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -3417 
 	?TestJumpIfLe?b -> 16335 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 13996 
 	?TestJumpIfLe?b -> 22218 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 30975 
 	?TestJumpIfLe?b -> 31420 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 17590 
 	?TestJumpIfLe?b -> 23230 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -7374 
 	?TestJumpIfLe?b -> 24686 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -6623 
 	?TestJumpIfLe?b -> 27912 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 30512 
 	?TestJumpIfLe?b -> 30971 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 19522 
 	?TestJumpIfLe?b -> 31963 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -28326 
 	?TestJumpIfLe?b -> 32279 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 14976 
 	?TestJumpIfLe?b -> 20649 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -25204 
 	?TestJumpIfLe?b -> 14702 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -21855 
 	?TestJumpIfLe?b -> 12460 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 15552 
 	?TestJumpIfLe?b -> 26420 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 10175 
 	?TestJumpIfLe?b -> 13333 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 24378 
 	?TestJumpIfLe?b -> 30816 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 8939 
 	?TestJumpIfLe?b -> 25299 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -29499 
 	?TestJumpIfLe?b -> 12900 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -4856 
 	?TestJumpIfLe?b -> 20724 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 29168 
 	?TestJumpIfLe?b -> 31183 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 1099 
 	?TestJumpIfLe?b -> 16420 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -4637 
 	?TestJumpIfLe?b -> 19488 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 507 
 	?TestJumpIfLe?b -> 25449 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -2328 
 	?TestJumpIfLe?b -> 8986 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -20501 
 	?TestJumpIfLe?b -> 27222 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 26229 
 	?TestJumpIfLe?b -> 28094 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 3466 
 	?TestJumpIfLe?b -> 20132 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 22674 
 	?TestJumpIfLe?b -> 26210 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -24224 
 	?TestJumpIfLe?b -> 18596 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -7911 
 	?TestJumpIfLe?b -> 2710 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -17278 
 	?TestJumpIfLe?b -> -7340 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 31527 
 	?TestJumpIfLe?b -> 32708 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 21523 
 	?TestJumpIfLe?b -> 32354 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 15005 
 	?TestJumpIfLe?b -> 20414 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -17640 
 	?TestJumpIfLe?b -> 31974 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 31732 
 	?TestJumpIfLe?b -> 32560 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -31671 
 	?TestJumpIfLe?b -> -16739 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 12887 
 	?TestJumpIfLe?b -> 21108 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 24990 
 	?TestJumpIfLe?b -> 27219 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -30958 
 	?TestJumpIfLe?b -> 8266 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 16228 
 	?TestJumpIfLe?b -> 32094 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -11202 
 	?TestJumpIfLe?b -> -3007 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -17765 
 	?TestJumpIfLe?b -> 29769 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 5013 
 	?TestJumpIfLe?b -> 22570 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 11330 
 	?TestJumpIfLe?b -> 21776 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -17007 
 	?TestJumpIfLe?b -> -12591 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 12178 
 	?TestJumpIfLe?b -> 20795 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 5128 
 	?TestJumpIfLe?b -> 9909 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -27647 
 	?TestJumpIfLe?b -> 29155 
 	?TestJumpIfLe?.fin -> 
 } 
 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 32768 
 	?TestJumpIfLe?b -> -1 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 32768 
 	?TestJumpIfLe?b -> 0 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> -1 
 	?TestJumpIfLe?b -> 0 
 	?TestJumpIfLe?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?TestJumpIfLe?.contd 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?b ?TestJumpIfLe?.contd 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W .err 
 	?TestJumpIfLe?.contd -> 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ?TestJumpIfLe?a 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= ?TestJumpIfLe?b 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		?TestJumpIfLe?b -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		?TestJumpIfLe?a -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ?TestJumpIfLe?a ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ?TestJumpIfLe?a .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	W -= W ?TestJumpIfLe?.fin 
 	
 	?TestJumpIfLe?a -> 0 
 	?TestJumpIfLe?b -> 1 
 	?TestJumpIfLe?.fin -> 
 } 
 
 
 
 { 
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	Z -= Z 
 	?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 	
 	Z -= a 
 	?JumpIf::Le?a_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 	
 	Z -= b 
 	?JumpIf::Le?b_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?l -= ?JumpIf::Le?l 
 	
 	Z -= a 
 	?JumpIf::Le?l -= Z 
 	?JumpIf::Le?a_plus_one -= N_ONE 
 	?JumpIf::Le?b_plus_one -= N_ONE 
 	
 	a -= ZERO ?JumpIf::Le?.a_not_b 
 	W -= W ?JumpIf::Le?.not_a_b 
 	
 	?JumpIf::Le?.a_not_b -> 
 	b -= ZERO ?JumpIf::Le?.a_b 
 	W -= W .err 
 	
 	?JumpIf::Le?.not_a_b -> 
 	b -= ZERO ?JumpIf::Le?.fin 
 	W -= W ?JumpIf::Le?.a_b 
 	
 	?JumpIf::Le?.a_b -> 
 	a -= ZERO ?JumpIf::Le?.S 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.S -> 
 	b -= ZERO ?JumpIf::Le?.N 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.N -> 
 	
 	
 	?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 	?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.final -> 
 	?JumpIf::Le?l -= b ?JumpIf::Le?.TN 
 	W -= W ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.TN -> 
 	
 	?JumpIf::Le?a_plus_one -= b .err 
 	
 	W -= W ?JumpIf::Le?.fin 
 	
 	?JumpIf::Le?a_plus_one -> 0 
 	?JumpIf::Le?b_plus_one -> 0 
 	?JumpIf::Le?l -> 0 
 	
 	?JumpIf::Le?.fin -> 
 } 
 { 
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	Z -= Z 
 	?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 	
 	Z -= b 
 	?JumpIf::Le?a_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 	
 	Z -= a 
 	?JumpIf::Le?b_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?l -= ?JumpIf::Le?l 
 	
 	Z -= b 
 	?JumpIf::Le?l -= Z 
 	?JumpIf::Le?a_plus_one -= N_ONE 
 	?JumpIf::Le?b_plus_one -= N_ONE 
 	
 	b -= ZERO ?JumpIf::Le?.a_not_b 
 	W -= W ?JumpIf::Le?.not_a_b 
 	
 	?JumpIf::Le?.a_not_b -> 
 	a -= ZERO ?JumpIf::Le?.a_b 
 	W -= W .T1 
 	
 	?JumpIf::Le?.not_a_b -> 
 	a -= ZERO ?JumpIf::Le?.fin 
 	W -= W ?JumpIf::Le?.a_b 
 	
 	?JumpIf::Le?.a_b -> 
 	b -= ZERO ?JumpIf::Le?.S 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.S -> 
 	a -= ZERO ?JumpIf::Le?.N 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.N -> 
 	
 	
 	?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 	?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.final -> 
 	?JumpIf::Le?l -= a ?JumpIf::Le?.TN 
 	W -= W ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.TN -> 
 	
 	?JumpIf::Le?a_plus_one -= a .T1 
 	
 	W -= W ?JumpIf::Le?.fin 
 	
 	?JumpIf::Le?a_plus_one -> 0 
 	?JumpIf::Le?b_plus_one -> 0 
 	?JumpIf::Le?l -> 0 
 	
 	?JumpIf::Le?.fin -> 
 } 
 W -= W .err 
 .T1 -> 
 
 { 
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	Z -= Z 
 	?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 	
 	Z -= c 
 	?JumpIf::Le?a_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 	
 	Z -= b 
 	?JumpIf::Le?b_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?l -= ?JumpIf::Le?l 
 	
 	Z -= c 
 	?JumpIf::Le?l -= Z 
 	?JumpIf::Le?a_plus_one -= N_ONE 
 	?JumpIf::Le?b_plus_one -= N_ONE 
 	
 	c -= ZERO ?JumpIf::Le?.a_not_b 
 	W -= W ?JumpIf::Le?.not_a_b 
 	
 	?JumpIf::Le?.a_not_b -> 
 	b -= ZERO ?JumpIf::Le?.a_b 
 	W -= W .err 
 	
 	?JumpIf::Le?.not_a_b -> 
 	b -= ZERO ?JumpIf::Le?.fin 
 	W -= W ?JumpIf::Le?.a_b 
 	
 	?JumpIf::Le?.a_b -> 
 	c -= ZERO ?JumpIf::Le?.S 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.S -> 
 	b -= ZERO ?JumpIf::Le?.N 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.N -> 
 	
 	
 	?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 	?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.final -> 
 	?JumpIf::Le?l -= b ?JumpIf::Le?.TN 
 	W -= W ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.TN -> 
 	
 	?JumpIf::Le?a_plus_one -= b .err 
 	
 	W -= W ?JumpIf::Le?.fin 
 	
 	?JumpIf::Le?a_plus_one -> 0 
 	?JumpIf::Le?b_plus_one -> 0 
 	?JumpIf::Le?l -> 0 
 	
 	?JumpIf::Le?.fin -> 
 } 
 { 
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	Z -= Z 
 	?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 	
 	Z -= b 
 	?JumpIf::Le?a_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 	
 	Z -= c 
 	?JumpIf::Le?b_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?l -= ?JumpIf::Le?l 
 	
 	Z -= b 
 	?JumpIf::Le?l -= Z 
 	?JumpIf::Le?a_plus_one -= N_ONE 
 	?JumpIf::Le?b_plus_one -= N_ONE 
 	
 	b -= ZERO ?JumpIf::Le?.a_not_b 
 	W -= W ?JumpIf::Le?.not_a_b 
 	
 	?JumpIf::Le?.a_not_b -> 
 	c -= ZERO ?JumpIf::Le?.a_b 
 	W -= W .T2 
 	
 	?JumpIf::Le?.not_a_b -> 
 	c -= ZERO ?JumpIf::Le?.fin 
 	W -= W ?JumpIf::Le?.a_b 
 	
 	?JumpIf::Le?.a_b -> 
 	b -= ZERO ?JumpIf::Le?.S 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.S -> 
 	c -= ZERO ?JumpIf::Le?.N 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.N -> 
 	
 	
 	?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 	?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.final -> 
 	?JumpIf::Le?l -= c ?JumpIf::Le?.TN 
 	W -= W ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.TN -> 
 	
 	?JumpIf::Le?a_plus_one -= c .T2 
 	
 	W -= W ?JumpIf::Le?.fin 
 	
 	?JumpIf::Le?a_plus_one -> 0 
 	?JumpIf::Le?b_plus_one -> 0 
 	?JumpIf::Le?l -> 0 
 	
 	?JumpIf::Le?.fin -> 
 } 
 W -= W .err 
 .T2 -> 
 
 { 
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	Z -= Z 
 	?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 	
 	Z -= a 
 	?JumpIf::Le?a_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 	
 	Z -= c 
 	?JumpIf::Le?b_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?l -= ?JumpIf::Le?l 
 	
 	Z -= a 
 	?JumpIf::Le?l -= Z 
 	?JumpIf::Le?a_plus_one -= N_ONE 
 	?JumpIf::Le?b_plus_one -= N_ONE 
 	
 	a -= ZERO ?JumpIf::Le?.a_not_b 
 	W -= W ?JumpIf::Le?.not_a_b 
 	
 	?JumpIf::Le?.a_not_b -> 
 	c -= ZERO ?JumpIf::Le?.a_b 
 	W -= W .err 
 	
 	?JumpIf::Le?.not_a_b -> 
 	c -= ZERO ?JumpIf::Le?.fin 
 	W -= W ?JumpIf::Le?.a_b 
 	
 	?JumpIf::Le?.a_b -> 
 	a -= ZERO ?JumpIf::Le?.S 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.S -> 
 	c -= ZERO ?JumpIf::Le?.N 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.N -> 
 	
 	
 	?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 	?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.final -> 
 	?JumpIf::Le?l -= c ?JumpIf::Le?.TN 
 	W -= W ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.TN -> 
 	
 	?JumpIf::Le?a_plus_one -= c .err 
 	
 	W -= W ?JumpIf::Le?.fin 
 	
 	?JumpIf::Le?a_plus_one -> 0 
 	?JumpIf::Le?b_plus_one -> 0 
 	?JumpIf::Le?l -> 0 
 	
 	?JumpIf::Le?.fin -> 
 } 
 { 
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	Z -= Z 
 	?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 	
 	Z -= c 
 	?JumpIf::Le?a_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 	
 	Z -= a 
 	?JumpIf::Le?b_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?l -= ?JumpIf::Le?l 
 	
 	Z -= c 
 	?JumpIf::Le?l -= Z 
 	?JumpIf::Le?a_plus_one -= N_ONE 
 	?JumpIf::Le?b_plus_one -= N_ONE 
 	
 	c -= ZERO ?JumpIf::Le?.a_not_b 
 	W -= W ?JumpIf::Le?.not_a_b 
 	
 	?JumpIf::Le?.a_not_b -> 
 	a -= ZERO ?JumpIf::Le?.a_b 
 	W -= W .T3 
 	
 	?JumpIf::Le?.not_a_b -> 
 	a -= ZERO ?JumpIf::Le?.fin 
 	W -= W ?JumpIf::Le?.a_b 
 	
 	?JumpIf::Le?.a_b -> 
 	c -= ZERO ?JumpIf::Le?.S 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.S -> 
 	a -= ZERO ?JumpIf::Le?.N 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.N -> 
 	
 	
 	?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 	?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.final -> 
 	?JumpIf::Le?l -= a ?JumpIf::Le?.TN 
 	W -= W ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.TN -> 
 	
 	?JumpIf::Le?a_plus_one -= a .T3 
 	
 	W -= W ?JumpIf::Le?.fin 
 	
 	?JumpIf::Le?a_plus_one -> 0 
 	?JumpIf::Le?b_plus_one -> 0 
 	?JumpIf::Le?l -> 0 
 	
 	?JumpIf::Le?.fin -> 
 } 
 W -= W .err 
 .T3 -> 
 
 { 
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	Z -= Z 
 	?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 	
 	Z -= a 
 	?JumpIf::Le?a_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 	
 	Z -= SNEG 
 	?JumpIf::Le?b_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?l -= ?JumpIf::Le?l 
 	
 	Z -= a 
 	?JumpIf::Le?l -= Z 
 	?JumpIf::Le?a_plus_one -= N_ONE 
 	?JumpIf::Le?b_plus_one -= N_ONE 
 	
 	a -= ZERO ?JumpIf::Le?.a_not_b 
 	W -= W ?JumpIf::Le?.not_a_b 
 	
 	?JumpIf::Le?.a_not_b -> 
 	SNEG -= ZERO ?JumpIf::Le?.a_b 
 	W -= W .err 
 	
 	?JumpIf::Le?.not_a_b -> 
 	SNEG -= ZERO ?JumpIf::Le?.fin 
 	W -= W ?JumpIf::Le?.a_b 
 	
 	?JumpIf::Le?.a_b -> 
 	a -= ZERO ?JumpIf::Le?.S 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.S -> 
 	SNEG -= ZERO ?JumpIf::Le?.N 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.N -> 
 	
 	
 	?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 	?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.final -> 
 	?JumpIf::Le?l -= SNEG ?JumpIf::Le?.TN 
 	W -= W ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.TN -> 
 	
 	?JumpIf::Le?a_plus_one -= SNEG .err 
 	
 	W -= W ?JumpIf::Le?.fin 
 	
 	?JumpIf::Le?a_plus_one -> 0 
 	?JumpIf::Le?b_plus_one -> 0 
 	?JumpIf::Le?l -> 0 
 	
 	?JumpIf::Le?.fin -> 
 } 
 { 
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	Z -= Z 
 	?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 	
 	Z -= SNEG 
 	?JumpIf::Le?a_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 	
 	Z -= a 
 	?JumpIf::Le?b_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?l -= ?JumpIf::Le?l 
 	
 	Z -= SNEG 
 	?JumpIf::Le?l -= Z 
 	?JumpIf::Le?a_plus_one -= N_ONE 
 	?JumpIf::Le?b_plus_one -= N_ONE 
 	
 	SNEG -= ZERO ?JumpIf::Le?.a_not_b 
 	W -= W ?JumpIf::Le?.not_a_b 
 	
 	?JumpIf::Le?.a_not_b -> 
 	a -= ZERO ?JumpIf::Le?.a_b 
 	W -= W .T4 
 	
 	?JumpIf::Le?.not_a_b -> 
 	a -= ZERO ?JumpIf::Le?.fin 
 	W -= W ?JumpIf::Le?.a_b 
 	
 	?JumpIf::Le?.a_b -> 
 	SNEG -= ZERO ?JumpIf::Le?.S 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.S -> 
 	a -= ZERO ?JumpIf::Le?.N 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.N -> 
 	
 	
 	?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 	?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.final -> 
 	?JumpIf::Le?l -= a ?JumpIf::Le?.TN 
 	W -= W ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.TN -> 
 	
 	?JumpIf::Le?a_plus_one -= a .T4 
 	
 	W -= W ?JumpIf::Le?.fin 
 	
 	?JumpIf::Le?a_plus_one -> 0 
 	?JumpIf::Le?b_plus_one -> 0 
 	?JumpIf::Le?l -> 0 
 	
 	?JumpIf::Le?.fin -> 
 } 
 W -= W .err 
 .T4 -> 
 
 { 
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	Z -= Z 
 	?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 	
 	Z -= b 
 	?JumpIf::Le?a_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 	
 	Z -= SNEG 
 	?JumpIf::Le?b_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?l -= ?JumpIf::Le?l 
 	
 	Z -= b 
 	?JumpIf::Le?l -= Z 
 	?JumpIf::Le?a_plus_one -= N_ONE 
 	?JumpIf::Le?b_plus_one -= N_ONE 
 	
 	b -= ZERO ?JumpIf::Le?.a_not_b 
 	W -= W ?JumpIf::Le?.not_a_b 
 	
 	?JumpIf::Le?.a_not_b -> 
 	SNEG -= ZERO ?JumpIf::Le?.a_b 
 	W -= W .err 
 	
 	?JumpIf::Le?.not_a_b -> 
 	SNEG -= ZERO ?JumpIf::Le?.fin 
 	W -= W ?JumpIf::Le?.a_b 
 	
 	?JumpIf::Le?.a_b -> 
 	b -= ZERO ?JumpIf::Le?.S 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.S -> 
 	SNEG -= ZERO ?JumpIf::Le?.N 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.N -> 
 	
 	
 	?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 	?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.final -> 
 	?JumpIf::Le?l -= SNEG ?JumpIf::Le?.TN 
 	W -= W ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.TN -> 
 	
 	?JumpIf::Le?a_plus_one -= SNEG .err 
 	
 	W -= W ?JumpIf::Le?.fin 
 	
 	?JumpIf::Le?a_plus_one -> 0 
 	?JumpIf::Le?b_plus_one -> 0 
 	?JumpIf::Le?l -> 0 
 	
 	?JumpIf::Le?.fin -> 
 } 
 { 
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	Z -= Z 
 	?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 	
 	Z -= SNEG 
 	?JumpIf::Le?a_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 	
 	Z -= b 
 	?JumpIf::Le?b_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?l -= ?JumpIf::Le?l 
 	
 	Z -= SNEG 
 	?JumpIf::Le?l -= Z 
 	?JumpIf::Le?a_plus_one -= N_ONE 
 	?JumpIf::Le?b_plus_one -= N_ONE 
 	
 	SNEG -= ZERO ?JumpIf::Le?.a_not_b 
 	W -= W ?JumpIf::Le?.not_a_b 
 	
 	?JumpIf::Le?.a_not_b -> 
 	b -= ZERO ?JumpIf::Le?.a_b 
 	W -= W .T5 
 	
 	?JumpIf::Le?.not_a_b -> 
 	b -= ZERO ?JumpIf::Le?.fin 
 	W -= W ?JumpIf::Le?.a_b 
 	
 	?JumpIf::Le?.a_b -> 
 	SNEG -= ZERO ?JumpIf::Le?.S 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.S -> 
 	b -= ZERO ?JumpIf::Le?.N 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.N -> 
 	
 	
 	?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 	?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.final -> 
 	?JumpIf::Le?l -= b ?JumpIf::Le?.TN 
 	W -= W ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.TN -> 
 	
 	?JumpIf::Le?a_plus_one -= b .T5 
 	
 	W -= W ?JumpIf::Le?.fin 
 	
 	?JumpIf::Le?a_plus_one -> 0 
 	?JumpIf::Le?b_plus_one -> 0 
 	?JumpIf::Le?l -> 0 
 	
 	?JumpIf::Le?.fin -> 
 } 
 W -= W .err 
 .T5 -> 
 
 { 
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	Z -= Z 
 	?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 	
 	Z -= c 
 	?JumpIf::Le?a_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 	
 	Z -= SNEG 
 	?JumpIf::Le?b_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?l -= ?JumpIf::Le?l 
 	
 	Z -= c 
 	?JumpIf::Le?l -= Z 
 	?JumpIf::Le?a_plus_one -= N_ONE 
 	?JumpIf::Le?b_plus_one -= N_ONE 
 	
 	c -= ZERO ?JumpIf::Le?.a_not_b 
 	W -= W ?JumpIf::Le?.not_a_b 
 	
 	?JumpIf::Le?.a_not_b -> 
 	SNEG -= ZERO ?JumpIf::Le?.a_b 
 	W -= W .err 
 	
 	?JumpIf::Le?.not_a_b -> 
 	SNEG -= ZERO ?JumpIf::Le?.fin 
 	W -= W ?JumpIf::Le?.a_b 
 	
 	?JumpIf::Le?.a_b -> 
 	c -= ZERO ?JumpIf::Le?.S 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.S -> 
 	SNEG -= ZERO ?JumpIf::Le?.N 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.N -> 
 	
 	
 	?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 	?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.final -> 
 	?JumpIf::Le?l -= SNEG ?JumpIf::Le?.TN 
 	W -= W ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.TN -> 
 	
 	?JumpIf::Le?a_plus_one -= SNEG .err 
 	
 	W -= W ?JumpIf::Le?.fin 
 	
 	?JumpIf::Le?a_plus_one -> 0 
 	?JumpIf::Le?b_plus_one -> 0 
 	?JumpIf::Le?l -> 0 
 	
 	?JumpIf::Le?.fin -> 
 } 
 { 
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	Z -= Z 
 	?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 	
 	Z -= SNEG 
 	?JumpIf::Le?a_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 	
 	Z -= c 
 	?JumpIf::Le?b_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?l -= ?JumpIf::Le?l 
 	
 	Z -= SNEG 
 	?JumpIf::Le?l -= Z 
 	?JumpIf::Le?a_plus_one -= N_ONE 
 	?JumpIf::Le?b_plus_one -= N_ONE 
 	
 	SNEG -= ZERO ?JumpIf::Le?.a_not_b 
 	W -= W ?JumpIf::Le?.not_a_b 
 	
 	?JumpIf::Le?.a_not_b -> 
 	c -= ZERO ?JumpIf::Le?.a_b 
 	W -= W .T6 
 	
 	?JumpIf::Le?.not_a_b -> 
 	c -= ZERO ?JumpIf::Le?.fin 
 	W -= W ?JumpIf::Le?.a_b 
 	
 	?JumpIf::Le?.a_b -> 
 	SNEG -= ZERO ?JumpIf::Le?.S 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.S -> 
 	c -= ZERO ?JumpIf::Le?.N 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.N -> 
 	
 	
 	?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 	?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.final -> 
 	?JumpIf::Le?l -= c ?JumpIf::Le?.TN 
 	W -= W ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.TN -> 
 	
 	?JumpIf::Le?a_plus_one -= c .T6 
 	
 	W -= W ?JumpIf::Le?.fin 
 	
 	?JumpIf::Le?a_plus_one -> 0 
 	?JumpIf::Le?b_plus_one -> 0 
 	?JumpIf::Le?l -> 0 
 	
 	?JumpIf::Le?.fin -> 
 } 
 W -= W .err 
 .T6 -> 
 
 
 { 
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	Z -= Z 
 	?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 	
 	Z -= a 
 	?JumpIf::Le?a_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 	
 	Z -= a 
 	?JumpIf::Le?b_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?l -= ?JumpIf::Le?l 
 	
 	Z -= a 
 	?JumpIf::Le?l -= Z 
 	?JumpIf::Le?a_plus_one -= N_ONE 
 	?JumpIf::Le?b_plus_one -= N_ONE 
 	
 	a -= ZERO ?JumpIf::Le?.a_not_b 
 	W -= W ?JumpIf::Le?.not_a_b 
 	
 	?JumpIf::Le?.a_not_b -> 
 	a -= ZERO ?JumpIf::Le?.a_b 
 	W -= W .err 
 	
 	?JumpIf::Le?.not_a_b -> 
 	a -= ZERO ?JumpIf::Le?.fin 
 	W -= W ?JumpIf::Le?.a_b 
 	
 	?JumpIf::Le?.a_b -> 
 	a -= ZERO ?JumpIf::Le?.S 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.S -> 
 	a -= ZERO ?JumpIf::Le?.N 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.N -> 
 	
 	
 	?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 	?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.final -> 
 	?JumpIf::Le?l -= a ?JumpIf::Le?.TN 
 	W -= W ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.TN -> 
 	
 	?JumpIf::Le?a_plus_one -= a .err 
 	
 	W -= W ?JumpIf::Le?.fin 
 	
 	?JumpIf::Le?a_plus_one -> 0 
 	?JumpIf::Le?b_plus_one -> 0 
 	?JumpIf::Le?l -> 0 
 	
 	?JumpIf::Le?.fin -> 
 } 
 { 
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	Z -= Z 
 	?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 	
 	Z -= b 
 	?JumpIf::Le?a_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 	
 	Z -= b 
 	?JumpIf::Le?b_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?l -= ?JumpIf::Le?l 
 	
 	Z -= b 
 	?JumpIf::Le?l -= Z 
 	?JumpIf::Le?a_plus_one -= N_ONE 
 	?JumpIf::Le?b_plus_one -= N_ONE 
 	
 	b -= ZERO ?JumpIf::Le?.a_not_b 
 	W -= W ?JumpIf::Le?.not_a_b 
 	
 	?JumpIf::Le?.a_not_b -> 
 	b -= ZERO ?JumpIf::Le?.a_b 
 	W -= W .err 
 	
 	?JumpIf::Le?.not_a_b -> 
 	b -= ZERO ?JumpIf::Le?.fin 
 	W -= W ?JumpIf::Le?.a_b 
 	
 	?JumpIf::Le?.a_b -> 
 	b -= ZERO ?JumpIf::Le?.S 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.S -> 
 	b -= ZERO ?JumpIf::Le?.N 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.N -> 
 	
 	
 	?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 	?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.final -> 
 	?JumpIf::Le?l -= b ?JumpIf::Le?.TN 
 	W -= W ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.TN -> 
 	
 	?JumpIf::Le?a_plus_one -= b .err 
 	
 	W -= W ?JumpIf::Le?.fin 
 	
 	?JumpIf::Le?a_plus_one -> 0 
 	?JumpIf::Le?b_plus_one -> 0 
 	?JumpIf::Le?l -> 0 
 	
 	?JumpIf::Le?.fin -> 
 } 
 { 
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	Z -= Z 
 	?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 	
 	Z -= c 
 	?JumpIf::Le?a_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 	
 	Z -= c 
 	?JumpIf::Le?b_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?l -= ?JumpIf::Le?l 
 	
 	Z -= c 
 	?JumpIf::Le?l -= Z 
 	?JumpIf::Le?a_plus_one -= N_ONE 
 	?JumpIf::Le?b_plus_one -= N_ONE 
 	
 	c -= ZERO ?JumpIf::Le?.a_not_b 
 	W -= W ?JumpIf::Le?.not_a_b 
 	
 	?JumpIf::Le?.a_not_b -> 
 	c -= ZERO ?JumpIf::Le?.a_b 
 	W -= W .err 
 	
 	?JumpIf::Le?.not_a_b -> 
 	c -= ZERO ?JumpIf::Le?.fin 
 	W -= W ?JumpIf::Le?.a_b 
 	
 	?JumpIf::Le?.a_b -> 
 	c -= ZERO ?JumpIf::Le?.S 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.S -> 
 	c -= ZERO ?JumpIf::Le?.N 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.N -> 
 	
 	
 	?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 	?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.final -> 
 	?JumpIf::Le?l -= c ?JumpIf::Le?.TN 
 	W -= W ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.TN -> 
 	
 	?JumpIf::Le?a_plus_one -= c .err 
 	
 	W -= W ?JumpIf::Le?.fin 
 	
 	?JumpIf::Le?a_plus_one -> 0 
 	?JumpIf::Le?b_plus_one -> 0 
 	?JumpIf::Le?l -> 0 
 	
 	?JumpIf::Le?.fin -> 
 } 
 
 { 
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	Z -= Z 
 	?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 	
 	Z -= SNEG 
 	?JumpIf::Le?a_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 	
 	Z -= SNEG 
 	?JumpIf::Le?b_plus_one -= Z 
 	Z -= Z 
 	?JumpIf::Le?l -= ?JumpIf::Le?l 
 	
 	Z -= SNEG 
 	?JumpIf::Le?l -= Z 
 	?JumpIf::Le?a_plus_one -= N_ONE 
 	?JumpIf::Le?b_plus_one -= N_ONE 
 	
 	SNEG -= ZERO ?JumpIf::Le?.a_not_b 
 	W -= W ?JumpIf::Le?.not_a_b 
 	
 	?JumpIf::Le?.a_not_b -> 
 	SNEG -= ZERO ?JumpIf::Le?.a_b 
 	W -= W .err 
 	
 	?JumpIf::Le?.not_a_b -> 
 	SNEG -= ZERO ?JumpIf::Le?.fin 
 	W -= W ?JumpIf::Le?.a_b 
 	
 	?JumpIf::Le?.a_b -> 
 	SNEG -= ZERO ?JumpIf::Le?.S 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.S -> 
 	SNEG -= ZERO ?JumpIf::Le?.N 
 	W -= W ?JumpIf::Le?.final 
 	?JumpIf::Le?.N -> 
 	
 	
 	?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 	?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.final -> 
 	?JumpIf::Le?l -= SNEG ?JumpIf::Le?.TN 
 	W -= W ?JumpIf::Le?.fin 
 	
 	
 	?JumpIf::Le?.TN -> 
 	
 	?JumpIf::Le?a_plus_one -= SNEG .err 
 	
 	W -= W ?JumpIf::Le?.fin 
 	
 	?JumpIf::Le?a_plus_one -> 0 
 	?JumpIf::Le?b_plus_one -> 0 
 	?JumpIf::Le?l -> 0 
 	
 	?JumpIf::Le?.fin -> 
 } 
 
 { 
 	{ 
 		W -= W ?IO::PrintLit?. 
 		?IO::PrintLit?string -> &1 76 69 32 40 98 97 115 105 115 41 32 115 117 99 99 101 115 115 0 
 		?IO::PrintLit?. -> 
 		{ 
 			Z -= Z 
 			ptr -= ptr 
 			
 			Z -= ?IO::PrintLit?string 
 			ptr -= Z 
 			W -= W ?IO::Print?.loop 
 			
 			
 			?IO::Print?.loop -> 
 			char -= char &2 
 			char -> 0 
 			n_char -= n_char &2 
 			n_char -> 0 
 			
 			n_char -= (ptr -> ..) 
 			char -= n_char 
 			char -= ZERO ?IO::Print?.fin 
 			
 			-1 -= char 
 			
 			ptr -= N_ONE 
 			
 			
 			Z -= Z ?IO::Print?.loop 
 			
 			
 			?IO::Print?.fin -> 
 			
 		} 
 	} 
 	{ 
 		-1 -= LINEBREAK 
 	} 
 } 
 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= SNEG 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ZERO 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= SNEG 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		SNEG -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		ZERO -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?JumpIf::Eq?.fin 
 		
 		?JumpIf::Le?.not_a_b -> 
 		ZERO -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		SNEG -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		ZERO -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ZERO ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Eq?.fin 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	{ 
 		{ 
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			Z -= Z 
 			?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 			
 			Z -= ZERO 
 			?JumpIf::Le?a_plus_one -= Z 
 			Z -= Z 
 			?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 			
 			Z -= SNEG 
 			?JumpIf::Le?b_plus_one -= Z 
 			Z -= Z 
 			?JumpIf::Le?l -= ?JumpIf::Le?l 
 			
 			Z -= ZERO 
 			?JumpIf::Le?l -= Z 
 			?JumpIf::Le?a_plus_one -= N_ONE 
 			?JumpIf::Le?b_plus_one -= N_ONE 
 			
 			ZERO -= ZERO ?JumpIf::Le?.a_not_b 
 			W -= W ?JumpIf::Le?.not_a_b 
 			
 			?JumpIf::Le?.a_not_b -> 
 			SNEG -= ZERO ?JumpIf::Le?.a_b 
 			W -= W ?JumpIf::Eq?.fin 
 			
 			?JumpIf::Le?.not_a_b -> 
 			SNEG -= ZERO ?JumpIf::Le?.fin 
 			W -= W ?JumpIf::Le?.a_b 
 			
 			?JumpIf::Le?.a_b -> 
 			ZERO -= ZERO ?JumpIf::Le?.S 
 			W -= W ?JumpIf::Le?.final 
 			?JumpIf::Le?.S -> 
 			SNEG -= ZERO ?JumpIf::Le?.N 
 			W -= W ?JumpIf::Le?.final 
 			?JumpIf::Le?.N -> 
 			
 			
 			?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 			?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 			
 			
 			?JumpIf::Le?.final -> 
 			?JumpIf::Le?l -= SNEG ?JumpIf::Le?.TN 
 			W -= W ?JumpIf::Le?.fin 
 			
 			
 			?JumpIf::Le?.TN -> 
 			
 			?JumpIf::Le?a_plus_one -= SNEG ?JumpIf::Eq?.fin 
 			
 			W -= W ?JumpIf::Le?.fin 
 			
 			?JumpIf::Le?a_plus_one -> 0 
 			?JumpIf::Le?b_plus_one -> 0 
 			?JumpIf::Le?l -> 0 
 			
 			?JumpIf::Le?.fin -> 
 		} 
 	} 
 	W -= W .err 
 	
 	?JumpIf::Eq?.fin -> 
 } 
 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= b 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		b -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?JumpIf::Eq?.fin 
 		
 		?JumpIf::Le?.not_a_b -> 
 		b -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		b -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= b ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= b ?JumpIf::Eq?.fin 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	{ 
 		{ 
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			Z -= Z 
 			?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 			
 			Z -= b 
 			?JumpIf::Le?a_plus_one -= Z 
 			Z -= Z 
 			?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 			
 			Z -= a 
 			?JumpIf::Le?b_plus_one -= Z 
 			Z -= Z 
 			?JumpIf::Le?l -= ?JumpIf::Le?l 
 			
 			Z -= b 
 			?JumpIf::Le?l -= Z 
 			?JumpIf::Le?a_plus_one -= N_ONE 
 			?JumpIf::Le?b_plus_one -= N_ONE 
 			
 			b -= ZERO ?JumpIf::Le?.a_not_b 
 			W -= W ?JumpIf::Le?.not_a_b 
 			
 			?JumpIf::Le?.a_not_b -> 
 			a -= ZERO ?JumpIf::Le?.a_b 
 			W -= W ?JumpIf::Eq?.fin 
 			
 			?JumpIf::Le?.not_a_b -> 
 			a -= ZERO ?JumpIf::Le?.fin 
 			W -= W ?JumpIf::Le?.a_b 
 			
 			?JumpIf::Le?.a_b -> 
 			b -= ZERO ?JumpIf::Le?.S 
 			W -= W ?JumpIf::Le?.final 
 			?JumpIf::Le?.S -> 
 			a -= ZERO ?JumpIf::Le?.N 
 			W -= W ?JumpIf::Le?.final 
 			?JumpIf::Le?.N -> 
 			
 			
 			?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 			?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 			
 			
 			?JumpIf::Le?.final -> 
 			?JumpIf::Le?l -= a ?JumpIf::Le?.TN 
 			W -= W ?JumpIf::Le?.fin 
 			
 			
 			?JumpIf::Le?.TN -> 
 			
 			?JumpIf::Le?a_plus_one -= a ?JumpIf::Eq?.fin 
 			
 			W -= W ?JumpIf::Le?.fin 
 			
 			?JumpIf::Le?a_plus_one -> 0 
 			?JumpIf::Le?b_plus_one -> 0 
 			?JumpIf::Le?l -> 0 
 			
 			?JumpIf::Le?.fin -> 
 		} 
 	} 
 	W -= W .err 
 	
 	?JumpIf::Eq?.fin -> 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= d 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		d -= ZERO ?JumpIf::Le?.a_b 
 		W -= W ?JumpIf::Eq?.fin 
 		
 		?JumpIf::Le?.not_a_b -> 
 		d -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		d -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= d ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= d ?JumpIf::Eq?.fin 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 	{ 
 		{ 
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			Z -= Z 
 			?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 			
 			Z -= d 
 			?JumpIf::Le?a_plus_one -= Z 
 			Z -= Z 
 			?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 			
 			Z -= a 
 			?JumpIf::Le?b_plus_one -= Z 
 			Z -= Z 
 			?JumpIf::Le?l -= ?JumpIf::Le?l 
 			
 			Z -= d 
 			?JumpIf::Le?l -= Z 
 			?JumpIf::Le?a_plus_one -= N_ONE 
 			?JumpIf::Le?b_plus_one -= N_ONE 
 			
 			d -= ZERO ?JumpIf::Le?.a_not_b 
 			W -= W ?JumpIf::Le?.not_a_b 
 			
 			?JumpIf::Le?.a_not_b -> 
 			a -= ZERO ?JumpIf::Le?.a_b 
 			W -= W ?JumpIf::Eq?.fin 
 			
 			?JumpIf::Le?.not_a_b -> 
 			a -= ZERO ?JumpIf::Le?.fin 
 			W -= W ?JumpIf::Le?.a_b 
 			
 			?JumpIf::Le?.a_b -> 
 			d -= ZERO ?JumpIf::Le?.S 
 			W -= W ?JumpIf::Le?.final 
 			?JumpIf::Le?.S -> 
 			a -= ZERO ?JumpIf::Le?.N 
 			W -= W ?JumpIf::Le?.final 
 			?JumpIf::Le?.N -> 
 			
 			
 			?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 			?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 			
 			
 			?JumpIf::Le?.final -> 
 			?JumpIf::Le?l -= a ?JumpIf::Le?.TN 
 			W -= W ?JumpIf::Le?.fin 
 			
 			
 			?JumpIf::Le?.TN -> 
 			
 			?JumpIf::Le?a_plus_one -= a ?JumpIf::Eq?.fin 
 			
 			W -= W ?JumpIf::Le?.fin 
 			
 			?JumpIf::Le?a_plus_one -> 0 
 			?JumpIf::Le?b_plus_one -> 0 
 			?JumpIf::Le?l -> 0 
 			
 			?JumpIf::Le?.fin -> 
 		} 
 	} 
 	W -= W .err 
 	
 	?JumpIf::Eq?.fin -> 
 } 
 { 
 	{ 
 		{ 
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			Z -= Z 
 			?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 			
 			Z -= b 
 			?JumpIf::Le?a_plus_one -= Z 
 			Z -= Z 
 			?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 			
 			Z -= b 
 			?JumpIf::Le?b_plus_one -= Z 
 			Z -= Z 
 			?JumpIf::Le?l -= ?JumpIf::Le?l 
 			
 			Z -= b 
 			?JumpIf::Le?l -= Z 
 			?JumpIf::Le?a_plus_one -= N_ONE 
 			?JumpIf::Le?b_plus_one -= N_ONE 
 			
 			b -= ZERO ?JumpIf::Le?.a_not_b 
 			W -= W ?JumpIf::Le?.not_a_b 
 			
 			?JumpIf::Le?.a_not_b -> 
 			b -= ZERO ?JumpIf::Le?.a_b 
 			W -= W ?JumpIf::Eq?.fin 
 			
 			?JumpIf::Le?.not_a_b -> 
 			b -= ZERO ?JumpIf::Le?.fin 
 			W -= W ?JumpIf::Le?.a_b 
 			
 			?JumpIf::Le?.a_b -> 
 			b -= ZERO ?JumpIf::Le?.S 
 			W -= W ?JumpIf::Le?.final 
 			?JumpIf::Le?.S -> 
 			b -= ZERO ?JumpIf::Le?.N 
 			W -= W ?JumpIf::Le?.final 
 			?JumpIf::Le?.N -> 
 			
 			
 			?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 			?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 			
 			
 			?JumpIf::Le?.final -> 
 			?JumpIf::Le?l -= b ?JumpIf::Le?.TN 
 			W -= W ?JumpIf::Le?.fin 
 			
 			
 			?JumpIf::Le?.TN -> 
 			
 			?JumpIf::Le?a_plus_one -= b ?JumpIf::Eq?.fin 
 			
 			W -= W ?JumpIf::Le?.fin 
 			
 			?JumpIf::Le?a_plus_one -> 0 
 			?JumpIf::Le?b_plus_one -> 0 
 			?JumpIf::Le?l -> 0 
 			
 			?JumpIf::Le?.fin -> 
 		} 
 		{ 
 			{ 
 				
 				
 				
 				
 				
 				
 				
 				
 				
 				
 				
 				
 				
 				
 				
 				
 				Z -= Z 
 				?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 				
 				Z -= b 
 				?JumpIf::Le?a_plus_one -= Z 
 				Z -= Z 
 				?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 				
 				Z -= b 
 				?JumpIf::Le?b_plus_one -= Z 
 				Z -= Z 
 				?JumpIf::Le?l -= ?JumpIf::Le?l 
 				
 				Z -= b 
 				?JumpIf::Le?l -= Z 
 				?JumpIf::Le?a_plus_one -= N_ONE 
 				?JumpIf::Le?b_plus_one -= N_ONE 
 				
 				b -= ZERO ?JumpIf::Le?.a_not_b 
 				W -= W ?JumpIf::Le?.not_a_b 
 				
 				?JumpIf::Le?.a_not_b -> 
 				b -= ZERO ?JumpIf::Le?.a_b 
 				W -= W ?JumpIf::Eq?.fin 
 				
 				?JumpIf::Le?.not_a_b -> 
 				b -= ZERO ?JumpIf::Le?.fin 
 				W -= W ?JumpIf::Le?.a_b 
 				
 				?JumpIf::Le?.a_b -> 
 				b -= ZERO ?JumpIf::Le?.S 
 				W -= W ?JumpIf::Le?.final 
 				?JumpIf::Le?.S -> 
 				b -= ZERO ?JumpIf::Le?.N 
 				W -= W ?JumpIf::Le?.final 
 				?JumpIf::Le?.N -> 
 				
 				
 				?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 				?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 				
 				
 				?JumpIf::Le?.final -> 
 				?JumpIf::Le?l -= b ?JumpIf::Le?.TN 
 				W -= W ?JumpIf::Le?.fin 
 				
 				
 				?JumpIf::Le?.TN -> 
 				
 				?JumpIf::Le?a_plus_one -= b ?JumpIf::Eq?.fin 
 				
 				W -= W ?JumpIf::Le?.fin 
 				
 				?JumpIf::Le?a_plus_one -> 0 
 				?JumpIf::Le?b_plus_one -> 0 
 				?JumpIf::Le?l -> 0 
 				
 				?JumpIf::Le?.fin -> 
 			} 
 		} 
 		W -= W ?JumpIf::Neq?.fin 
 		
 		?JumpIf::Eq?.fin -> 
 	} 
 	W -= W .err 
 	
 	?JumpIf::Neq?.fin -> 
 } 
 { 
 	{ 
 		{ 
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			Z -= Z 
 			?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 			
 			Z -= SNEG 
 			?JumpIf::Le?a_plus_one -= Z 
 			Z -= Z 
 			?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 			
 			Z -= SNEG 
 			?JumpIf::Le?b_plus_one -= Z 
 			Z -= Z 
 			?JumpIf::Le?l -= ?JumpIf::Le?l 
 			
 			Z -= SNEG 
 			?JumpIf::Le?l -= Z 
 			?JumpIf::Le?a_plus_one -= N_ONE 
 			?JumpIf::Le?b_plus_one -= N_ONE 
 			
 			SNEG -= ZERO ?JumpIf::Le?.a_not_b 
 			W -= W ?JumpIf::Le?.not_a_b 
 			
 			?JumpIf::Le?.a_not_b -> 
 			SNEG -= ZERO ?JumpIf::Le?.a_b 
 			W -= W ?JumpIf::Eq?.fin 
 			
 			?JumpIf::Le?.not_a_b -> 
 			SNEG -= ZERO ?JumpIf::Le?.fin 
 			W -= W ?JumpIf::Le?.a_b 
 			
 			?JumpIf::Le?.a_b -> 
 			SNEG -= ZERO ?JumpIf::Le?.S 
 			W -= W ?JumpIf::Le?.final 
 			?JumpIf::Le?.S -> 
 			SNEG -= ZERO ?JumpIf::Le?.N 
 			W -= W ?JumpIf::Le?.final 
 			?JumpIf::Le?.N -> 
 			
 			
 			?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 			?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 			
 			
 			?JumpIf::Le?.final -> 
 			?JumpIf::Le?l -= SNEG ?JumpIf::Le?.TN 
 			W -= W ?JumpIf::Le?.fin 
 			
 			
 			?JumpIf::Le?.TN -> 
 			
 			?JumpIf::Le?a_plus_one -= SNEG ?JumpIf::Eq?.fin 
 			
 			W -= W ?JumpIf::Le?.fin 
 			
 			?JumpIf::Le?a_plus_one -> 0 
 			?JumpIf::Le?b_plus_one -> 0 
 			?JumpIf::Le?l -> 0 
 			
 			?JumpIf::Le?.fin -> 
 		} 
 		{ 
 			{ 
 				
 				
 				
 				
 				
 				
 				
 				
 				
 				
 				
 				
 				
 				
 				
 				
 				Z -= Z 
 				?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 				
 				Z -= SNEG 
 				?JumpIf::Le?a_plus_one -= Z 
 				Z -= Z 
 				?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 				
 				Z -= SNEG 
 				?JumpIf::Le?b_plus_one -= Z 
 				Z -= Z 
 				?JumpIf::Le?l -= ?JumpIf::Le?l 
 				
 				Z -= SNEG 
 				?JumpIf::Le?l -= Z 
 				?JumpIf::Le?a_plus_one -= N_ONE 
 				?JumpIf::Le?b_plus_one -= N_ONE 
 				
 				SNEG -= ZERO ?JumpIf::Le?.a_not_b 
 				W -= W ?JumpIf::Le?.not_a_b 
 				
 				?JumpIf::Le?.a_not_b -> 
 				SNEG -= ZERO ?JumpIf::Le?.a_b 
 				W -= W ?JumpIf::Eq?.fin 
 				
 				?JumpIf::Le?.not_a_b -> 
 				SNEG -= ZERO ?JumpIf::Le?.fin 
 				W -= W ?JumpIf::Le?.a_b 
 				
 				?JumpIf::Le?.a_b -> 
 				SNEG -= ZERO ?JumpIf::Le?.S 
 				W -= W ?JumpIf::Le?.final 
 				?JumpIf::Le?.S -> 
 				SNEG -= ZERO ?JumpIf::Le?.N 
 				W -= W ?JumpIf::Le?.final 
 				?JumpIf::Le?.N -> 
 				
 				
 				?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 				?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 				
 				
 				?JumpIf::Le?.final -> 
 				?JumpIf::Le?l -= SNEG ?JumpIf::Le?.TN 
 				W -= W ?JumpIf::Le?.fin 
 				
 				
 				?JumpIf::Le?.TN -> 
 				
 				?JumpIf::Le?a_plus_one -= SNEG ?JumpIf::Eq?.fin 
 				
 				W -= W ?JumpIf::Le?.fin 
 				
 				?JumpIf::Le?a_plus_one -> 0 
 				?JumpIf::Le?b_plus_one -> 0 
 				?JumpIf::Le?l -> 0 
 				
 				?JumpIf::Le?.fin -> 
 			} 
 		} 
 		W -= W ?JumpIf::Neq?.fin 
 		
 		?JumpIf::Eq?.fin -> 
 	} 
 	W -= W .err 
 	
 	?JumpIf::Neq?.fin -> 
 } 
 
 { 
 	{ 
 		{ 
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			
 			Z -= Z 
 			?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 			
 			Z -= SNEG 
 			?JumpIf::Le?a_plus_one -= Z 
 			Z -= Z 
 			?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 			
 			Z -= ZERO 
 			?JumpIf::Le?b_plus_one -= Z 
 			Z -= Z 
 			?JumpIf::Le?l -= ?JumpIf::Le?l 
 			
 			Z -= SNEG 
 			?JumpIf::Le?l -= Z 
 			?JumpIf::Le?a_plus_one -= N_ONE 
 			?JumpIf::Le?b_plus_one -= N_ONE 
 			
 			SNEG -= ZERO ?JumpIf::Le?.a_not_b 
 			W -= W ?JumpIf::Le?.not_a_b 
 			
 			?JumpIf::Le?.a_not_b -> 
 			ZERO -= ZERO ?JumpIf::Le?.a_b 
 			W -= W ?Flip?.contd 
 			
 			?JumpIf::Le?.not_a_b -> 
 			ZERO -= ZERO ?JumpIf::Le?.fin 
 			W -= W ?JumpIf::Le?.a_b 
 			
 			?JumpIf::Le?.a_b -> 
 			SNEG -= ZERO ?JumpIf::Le?.S 
 			W -= W ?JumpIf::Le?.final 
 			?JumpIf::Le?.S -> 
 			ZERO -= ZERO ?JumpIf::Le?.N 
 			W -= W ?JumpIf::Le?.final 
 			?JumpIf::Le?.N -> 
 			
 			
 			?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 			?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 			
 			
 			?JumpIf::Le?.final -> 
 			?JumpIf::Le?l -= ZERO ?JumpIf::Le?.TN 
 			W -= W ?JumpIf::Le?.fin 
 			
 			
 			?JumpIf::Le?.TN -> 
 			
 			?JumpIf::Le?a_plus_one -= ZERO ?Flip?.contd 
 			
 			W -= W ?JumpIf::Le?.fin 
 			
 			?JumpIf::Le?a_plus_one -> 0 
 			?JumpIf::Le?b_plus_one -> 0 
 			?JumpIf::Le?l -> 0 
 			
 			?JumpIf::Le?.fin -> 
 		} 
 		W -= W .err 
 		
 		?Flip?.contd -> 
 	} 
 } 
 
 
 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= a 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ZERO 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= a 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		a -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		ZERO -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		ZERO -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		a -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		ZERO -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ZERO ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ZERO .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= c 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ZERO 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= c 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		c -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		ZERO -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .err 
 		
 		?JumpIf::Le?.not_a_b -> 
 		ZERO -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		c -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		ZERO -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ZERO ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ZERO .err 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 } 
 { 
 	{ 
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		
 		Z -= Z 
 		?JumpIf::Le?a_plus_one -= ?JumpIf::Le?a_plus_one 
 		
 		Z -= SNEG 
 		?JumpIf::Le?a_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?b_plus_one -= ?JumpIf::Le?b_plus_one 
 		
 		Z -= ZERO 
 		?JumpIf::Le?b_plus_one -= Z 
 		Z -= Z 
 		?JumpIf::Le?l -= ?JumpIf::Le?l 
 		
 		Z -= SNEG 
 		?JumpIf::Le?l -= Z 
 		?JumpIf::Le?a_plus_one -= N_ONE 
 		?JumpIf::Le?b_plus_one -= N_ONE 
 		
 		SNEG -= ZERO ?JumpIf::Le?.a_not_b 
 		W -= W ?JumpIf::Le?.not_a_b 
 		
 		?JumpIf::Le?.a_not_b -> 
 		ZERO -= ZERO ?JumpIf::Le?.a_b 
 		W -= W .T7 
 		
 		?JumpIf::Le?.not_a_b -> 
 		ZERO -= ZERO ?JumpIf::Le?.fin 
 		W -= W ?JumpIf::Le?.a_b 
 		
 		?JumpIf::Le?.a_b -> 
 		SNEG -= ZERO ?JumpIf::Le?.S 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.S -> 
 		ZERO -= ZERO ?JumpIf::Le?.N 
 		W -= W ?JumpIf::Le?.final 
 		?JumpIf::Le?.N -> 
 		
 		
 		?JumpIf::Le?a_plus_one -= ZERO ?JumpIf::Le?.final 
 		?JumpIf::Le?b_plus_one -= ZERO ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.final -> 
 		?JumpIf::Le?l -= ZERO ?JumpIf::Le?.TN 
 		W -= W ?JumpIf::Le?.fin 
 		
 		
 		?JumpIf::Le?.TN -> 
 		
 		?JumpIf::Le?a_plus_one -= ZERO .T7 
 		
 		W -= W ?JumpIf::Le?.fin 
 		
 		?JumpIf::Le?a_plus_one -> 0 
 		?JumpIf::Le?b_plus_one -> 0 
 		?JumpIf::Le?l -> 0 
 		
 		?JumpIf::Le?.fin -> 
 	} 
 } 
 W -= W .err 
 
 .T7 -> 
 
 { 
 	W -= W ?IO::PrintLit?. 
 	?IO::PrintLit?string -> &1 83 117 99 99 101 115 115 0 
 	?IO::PrintLit?. -> 
 	{ 
 		Z -= Z 
 		ptr -= ptr 
 		
 		Z -= ?IO::PrintLit?string 
 		ptr -= Z 
 		W -= W ?IO::Print?.loop 
 		
 		
 		?IO::Print?.loop -> 
 		char -= char &2 
 		char -> 0 
 		n_char -= n_char &2 
 		n_char -> 0 
 		
 		n_char -= (ptr -> ..) 
 		char -= n_char 
 		char -= ZERO ?IO::Print?.fin 
 		
 		-1 -= char 
 		
 		ptr -= N_ONE 
 		
 		
 		Z -= Z ?IO::Print?.loop 
 		
 		
 		?IO::Print?.fin -> 
 		
 	} 
 } 
 
 W -= W -1 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 