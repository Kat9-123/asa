#Sublib



@If value? body? {
    value? -= ZERO .false
    body?
    .false ->
}

@_IfBase m_conditional? body? {
    !Flip {m_conditional?} .false
    body?
    .false ->
}

@IfElse value? s_true? s_false? {
    value? -= ZERO .false
    s_true?
    !J .fin


    .false ->
    s_false?

    .fin ->
}

@_IfElseBase m_conditional? s_true? s_false? {

    m_conditional? .true

    s_false?

    !J .fin

    .true ->

    s_true?

    .fin ->
}


@If::Eq a? b? s_body? {
    !_IfBase {!JumpIf::Eq a? b?} s_body?
}


@If::Neq a? b? s_body? {
    !JumpIf::Eq a? b? .false
    s_body?
    .false ->
}


@IfElse::Eq a? b? s_true? s_false? {
    !_IfElseBase {!Eq a? b? } s_true? s_false?
}
@IfElse::Neq a? b? true? false? {
    !_IfElseBase {!JumpIf::Eq a? b? } true? false?
}



@Eq a? b? .addr? [!JumpIf::Eq a? b? .addr?]