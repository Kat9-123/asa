!J .main
#Sublib
#Sublib/Stack
**
LOW
....
Return address <- fp
arg1
arg2
arg3
Return value    <- sp
....
Return address
arg1
.. etc
HIGH
**

function_stack -> !Stack::Create 128


@Func name? args? body? [



name? ->
{
    body?
    !Func::Return
}
]



@Func::Call name? arg? {


    !Stack::Push function_stack _return_address

    !Stack::Push function_stack arg?
    !J name?

    _return_address -> &1
}


@Func::Return {
    !Stack::Pop function_stack return_addr

    W -= W (return_addr -> 0x0000)
}


!Func test a {
    !IO::PrintLnLit arg?
}

p -> &"Test"
.main ->
!Func::Call test p

!Halt